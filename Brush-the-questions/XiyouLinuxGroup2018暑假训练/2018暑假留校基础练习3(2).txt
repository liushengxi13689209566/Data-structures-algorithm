西邮 Linux 兴趣小组

2018 暑假留校

基础练习（3）

题目地址
题目密码
主题
题号

A
C
E

https://cn.vjudge.net/contest/244180
https://vjudge.net/contest/244180
xylinux2018DP
动态规划
原题目
题号
原题目
HDU 2084
B
HDU 1284
HDU 1087
D
POJ 2533
HDU 1078
F
HDU 1260

基本说明
1. 评测平台的结果反馈和对应意义如下：
表示
释义
Accepted
答案正确
Presentation Error
格式错误（多了或者少了空格或空行）
Wrong Answer
答案错误
Time Limit Exceed
使用时间超出限制
Memory Limit Exceed
使用内存超出限制
Output Limit Exceed
输出内容长度过长
Runtime Error
运行时错误（可能是数组越界等）
Compile Error
编译错误（代码无法通过编译）
2. 题目的样例输入和样例输出中，但凡是需要输出的内容，文本类内容均有
灰色的底色，无灰色底色的部分不必输出。
3. 评测平台的语言支持不一定为对应语言的最新标准，评测平台也不保证
使用某种操作系统。
4. 程序中不允许使用部分无关函数，包括但不限于文件操作函数、绝大多
数的系统调用等，若使用则有可能被判定为错误。
5. 题目除了样例之外还有大量其他的测试数据，即使你的程序针对给定的
样例可以得到正确的结果，也不代表你的程序一定正确。
6. 请严格按照输出和样例输出所给的输出形式进行输出，不要输出与答案
无关的内容，包括且不限于提示信息、多余的空格和多余的空行。
7. 答案判定的方法是：大量的测试数据以输入重定向的方式输入到你的程
序中，将你程序的输出与正确输出进行比对，若完全一致才认为正确。
8. 你可以认为绝大多数输入的末尾永远可以使用 scanf 读出 EOF。
9. 禁止在练习过程中的任何作弊性质行为！

题目 0：Fibonacci 数列
Fibonacci 数列的前两项是 1，然后这个数列从第 3 项开始，每一项都等于
前两项之和。

输入
输入的数据有多组，每组数据在一行内有一个正整数 N (1 ≤ N ≤ 100)。

输出
对于每组数据，在一行内输出 Fibonacci 数列的第 N 项。

样例输入
1
2
3
4
5

样例输出
1
1
2
3
5

注意
本题不在评测平台上提交，自行练习即可。

题目 A：数字之塔
暴风雨过后，你发现你正在一座神秘的数字之塔的顶层。在一番游览过后你
想回到地面上去，然而这座塔楼有一个神秘的性质，若想从中离开，你必须
说出从楼顶到底层经过的数字之和中最大的那个数字。例如，若你看到的是
下面这个数字之塔，那么，离开时你需要说出数字 40。
在数字之塔中，你每次只能向
下一层中与你相邻的两个房间
进发（参考图中的箭头标识），
且若把顶层视作第 1 层，第 i 层
具有 i 个房间。

输入
输入的数据首先包含一个整数 C，接下来是 C 组数据。每组数据首先是一个
正整数 N (1 ≤ N ≤ 100)，表示数字之塔的高度，然后是 N 行数字，其中
第 i 行数字有 i 个以空格作为分隔符的小于 100 的非负整数。

输出
输出离开时你需要说出的数字 K，每组数据的输出占一行。

样例输入
1
5
7
3
8
2
4

8
1 0
7 4 4
5 2 6 5

样例输出
30

题目 B：兑换硬币
在某个国家，只有 1 元、2 元和 3 元面值的三种硬币。现在你持有 N 元，想
把它全部兑换为硬币，请问有多少种兑换方法呢？

输入
输入的数据有多组，每组数据在一行内有一个正整数 N。

输出
对于每组数据，在一行内输出将 N 元换成硬币的方法数。

样例输入
2934
12553

样例输出
718831
13137761

题目 C：超级跳跃
《超级跳跃》是一款非常简单的小游戏，它的规则是这样的：
a. 游戏赛道被分为了 N 块区域，每块区域具有一个价值 Ki；
b. 玩家起始站在道路的起点处，当参与者到达终点处时游戏结束；
c. 玩家每次可以选择使用超级跳跃到达前方的任意区域，但到达的区域
必须满足以下两个条件之一：① 到达的区域是终点；② 到达的区域
的价值大于当前所在的区域价值。
d. 玩家每到达一个区域，就获得这块区域的价值。
e. 不可以使用超级跳跃向身后跳。
请你编写一个程序，算出对于一条《超级跳跃》游戏的赛道，玩家最多可以
获得多少价值。

输入
输入的数据有多组，每组数据首先是一个正整数 N (0 ≤ N ≤ 1000)，代表
赛道被分为 N 块区域，接下来是 N 个以空格为分隔符的数字 K1，K2 … KN
(−231 ≤ 𝐾𝑖 ≤ 231 − 1)，代表 N 块区域的价值。每组数据占一行。
若 N 为 0，则表示输入结束，该组数据不输出任何内容。

输出
对于每组数据，在一行内输出一个正整数，表示游戏中可获得的最大价值。

样例输入
3 1 3 2
4 1 2 3 4
4 3 3 2 1
0

样例输出
4
10
3

题目 D：超级跳跃 Again
玩过了很久的《超级跳跃》游戏之后，虽然游戏规则没有发生变化，但你的
心境发生了微妙的变化，你想经过更多的区域，看更多的风景。

输入
输入的数据有多组，每组数据首先是一个正整数 N (1 ≤ N ≤ 1000)，代表
赛道被分为 N 块区域，接下来是 N 个以空格为分隔符的数字 K1，K2 … KN，
代表 N 块区域的价值。每组数据占一行。

输出
对于每组数据，在一行内输出一个正整数，表示最多可经过的区域数。

样例输入
7
1 7 3 5 9 4 8

样例输出
4

注意
本题目与题目 C 的输入格式有所不同

题目 E：超级跳跃 Remake
最近，《超级跳跃》游戏进行了一次升级！近乎全新的《超级跳跃 Remake》
游戏已经上线啦，它的规则是这样的：
a. 游戏在一块 N × N 的区域中进行，每块区域具有一个价值 K(i, j)；
b. 玩家起始站在(1, 1)区域处，并且获得这块区域的价值；
c. 玩家每次可以选择使用超级跳跃到达与当前位置距离为 M 的，并且方
向正好水平或者垂直的区域，且到达的区域的价值应当大于当前所在
的区域价值。当无法找到这样的区域时游戏结束。
d. 两块区域的距离是这样计算的：每向上下左右移动一次，距离加 1，
下图显示了黑色区域到可以到达的各个区域的距离：
×
×
2 × ×
×
×
1 × ×
2 1 0 1 2
×
×
1 × ×
×
×
2 × ×
e. 玩家每到达一个区域，就获得这块区域的价值。
请你编写一个程序，算出任意一个《超级跳跃 Remake》游戏的区域，玩家
最多可以获得多少价值。

输入
输入的数据有多组，每组数据首先是两个正整数 N 和 M (1 ≤ N, M ≤ 100)
表示在一个 N × N 的区域内进行游戏，且超级跳跃只能移动到距离为 M 的区
域中。接下来有 N 行，每行有 N 个以空格为分隔符的数字:
K(i,1)，K(i, 2) … K(i, N)
第 i 行中第 j 个数字代表(i, j)区域的价值。
若 N 和 M 均等于-1，表示输入结束，该组数据不输出任何内容。

输出
对于每组数据，在一行内输出一个正整数，表示游戏中可获得的最大价值。

样例输入
3 1
1 2 5
10 11 6
12 12 7
-1 -1

样例输出
37

题目 F：超级跳跃 2
广受好评的《超级跳跃》游戏终于出了新作品，你作为它的粉丝已经迫不及
待的想要购买了。当你到达电玩店时，发现店前已经排起了长队，加上你一
共有 N 个人之多！每个人单独购买自己所需要的产品所需 Ki 秒，也可以选择
和排在自己前面的那个人合作，这样的话则需要 Si 秒。现在是早上 8 点，若
这 N 个人采用了最快的方式买完了自己所需的产品，那么买完的时候是什么
时间呢？

输入
输入的数据首先是一个整数 C，表示有 C 组输入数据。每组数据首先是一个
正整数 N(1 ≤ N ≤ 10)，然后在下一行内有 N 个整数 K1，K2 … KN，表示 N
个人单独购买需要的时间，接下来有 N – 1 个整数 S1，S2 … SN-1，表示每个
人和前面那个人一起购买需要的时间。

输出
对于每组数据，在一行内输出 N 个人最快在何时全部完成购买。
输出格式为 HH:MM:SS am/pm，如开始时间就表示为 08:00:00 am，下午 2
时则表示为 14:00:00 pm。

样例输入
2
2
20 25
40
1
8

样例输出
08:00:40 am
08:00:08 am

